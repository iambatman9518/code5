# -*- coding: utf-8 -*-
"""hillcliming.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a3MG-gf3wMWqKUwFfAoSfJiMiltr3AV0
"""

import random

N = int(input("Enter value of N in N-Queens Problem: "))

def is_safe(board, row, col):

    for r in range(row):
        if board[r][col] == 'Q':
            return False

    for r, c in zip(range(row-1, -1, -1), range(col-1, -1, -1)):
        if board[r][c] == 'Q':
            return False

    for r, c in zip(range(row-1, -1, -1), range(col+1, N)):
        if board[r][c] == 'Q':
            return False
    return True

def heuristic(board):
    count = 0
    for row in board:
        count += row.count('Q')
    return N - count


board = [['-' for _ in range(N)] for _ in range(N)]


while heuristic(board) != 0:

    board = [['-' for _ in range(N)] for _ in range(N)]

    for row in range(N):
        placed = False
        possible_positions = []


        for col in range(N):
            if is_safe(board, row, col):
                possible_positions.append(col)

        if possible_positions:
            col = random.choice(possible_positions)
            board[row][col] = 'Q'


    for row in board:
        print(row)


print("\nSolution found: ")
for row in board:
    print(row)

